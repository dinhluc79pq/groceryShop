map $http_x_forwarded_proto $fastcgi_https {
    default $https;
    http '';
    https on;
}
server {
    root    /var/www/html/web;
    listen 80;
    index index.php index.html;

    
    # Just return for google gclb healthcheck.
    if ($http_user_agent = 'GoogleHC/1.0') {
        return 200;
    }

    location = /favicon.ico {
        expires 30d;
        # Google cloud cdn needs a Cache-Control: public header.
        add_header Cache-Control "public";
        log_not_found off;
        access_log off;
    }

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    location ~* \.(txt|log)$ {
        allow 192.168.0.0/16;
        deny all;
    }

    location ~ \..*/.*\.php$ {
        return 403;
    }

    location ~ ^/sites/.*/private/ {
        return 403;
    }

    location ~ ^/sites/[^/]+/files/.*\.php$ {
        deny all;
    }

    location ~* ^/.well-known/ {
        allow all;
    }

    location ~ (^|/)\. {
        return 403;
    }

    location ~ /vendor/.*\.php$ {
        deny all;
        return 404;
    }
    location / {
         try_files $uri @rewrite;
    }

    location @rewrite {
        rewrite ^ /index.php;
    }
    

    location ~ \.php$ {
        include fastcgi.conf;
        #include /etc/nginx/conf.d/fragments/location/php/*.conf;
        #fastcgi_param SCRIPT_FILENAME $request_filename;
        fastcgi_pass unix:/var/run/php-fpm.sock;
    }

    location ~ ^/sites/.*/files/styles/ {
        expires 30d;
        # Google cloud cdn needs a Cache-Control: public header.
        add_header Cache-Control "public";
        try_files $uri @rewrite;
    }

    # Handle private files through Drupal. Private file's path can come
    # with a language prefix.
    location ~ ^(/[a-z\-]+)?/system/files/ { # For Drupal >= 7
        try_files $uri /index.php?$query_string;
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|svg|woff2|webp)$ {
        expires 30d;
        log_not_found off;
        # Google cloud cdn needs a Cache-Control: public header.
        add_header Cache-Control "public";
        try_files $uri @rewrite;
    }
}